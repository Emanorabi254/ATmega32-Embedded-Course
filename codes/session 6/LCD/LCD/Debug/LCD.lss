
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002f8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  000002f8  0000036c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000388  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  000003f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d70  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000076a  00000000  00000000  00001214  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000066f  00000000  00000000  0000197e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000148  00000000  00000000  00001ff0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000461  00000000  00000000  00002138  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000069d  00000000  00000000  00002599  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00002c36  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ef       	ldi	r30, 0xF8	; 248
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 37       	cpi	r26, 0x7C	; 124
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 63 01 	call	0x2c6	; 0x2c6 <main>
  7a:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <CLCD_SendData>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  82:	cf 93       	push	r28
  84:	c8 2f       	mov	r28, r24
  86:	41 e0       	ldi	r20, 0x01	; 1
  88:	60 e0       	ldi	r22, 0x00	; 0
  8a:	83 e0       	ldi	r24, 0x03	; 3
  8c:	0e 94 c7 00 	call	0x18e	; 0x18e <DIO_SetPinValue>
  90:	40 e0       	ldi	r20, 0x00	; 0
  92:	61 e0       	ldi	r22, 0x01	; 1
  94:	83 e0       	ldi	r24, 0x03	; 3
  96:	0e 94 c7 00 	call	0x18e	; 0x18e <DIO_SetPinValue>
  9a:	6c 2f       	mov	r22, r28
  9c:	81 e0       	ldi	r24, 0x01	; 1
  9e:	0e 94 50 01 	call	0x2a0	; 0x2a0 <DIO_SetPortValue>
  a2:	41 e0       	ldi	r20, 0x01	; 1
  a4:	62 e0       	ldi	r22, 0x02	; 2
  a6:	83 e0       	ldi	r24, 0x03	; 3
  a8:	0e 94 c7 00 	call	0x18e	; 0x18e <DIO_SetPinValue>
  ac:	89 ef       	ldi	r24, 0xF9	; 249
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	01 97       	sbiw	r24, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <CLCD_SendData+0x2e>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <CLCD_SendData+0x34>
  b6:	00 00       	nop
  b8:	40 e0       	ldi	r20, 0x00	; 0
  ba:	62 e0       	ldi	r22, 0x02	; 2
  bc:	83 e0       	ldi	r24, 0x03	; 3
  be:	0e 94 c7 00 	call	0x18e	; 0x18e <DIO_SetPinValue>
  c2:	cf 91       	pop	r28
  c4:	08 95       	ret

000000c6 <CLCD_SendCommond>:
  c6:	cf 93       	push	r28
  c8:	c8 2f       	mov	r28, r24
  ca:	40 e0       	ldi	r20, 0x00	; 0
  cc:	60 e0       	ldi	r22, 0x00	; 0
  ce:	83 e0       	ldi	r24, 0x03	; 3
  d0:	0e 94 c7 00 	call	0x18e	; 0x18e <DIO_SetPinValue>
  d4:	40 e0       	ldi	r20, 0x00	; 0
  d6:	61 e0       	ldi	r22, 0x01	; 1
  d8:	83 e0       	ldi	r24, 0x03	; 3
  da:	0e 94 c7 00 	call	0x18e	; 0x18e <DIO_SetPinValue>
  de:	6c 2f       	mov	r22, r28
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	0e 94 50 01 	call	0x2a0	; 0x2a0 <DIO_SetPortValue>
  e6:	41 e0       	ldi	r20, 0x01	; 1
  e8:	62 e0       	ldi	r22, 0x02	; 2
  ea:	83 e0       	ldi	r24, 0x03	; 3
  ec:	0e 94 c7 00 	call	0x18e	; 0x18e <DIO_SetPinValue>
  f0:	89 ef       	ldi	r24, 0xF9	; 249
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <CLCD_SendCommond+0x2e>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <CLCD_SendCommond+0x34>
  fa:	00 00       	nop
  fc:	40 e0       	ldi	r20, 0x00	; 0
  fe:	62 e0       	ldi	r22, 0x02	; 2
 100:	83 e0       	ldi	r24, 0x03	; 3
 102:	0e 94 c7 00 	call	0x18e	; 0x18e <DIO_SetPinValue>
 106:	cf 91       	pop	r28
 108:	08 95       	ret

0000010a <CLCD_Init>:
 10a:	8f e0       	ldi	r24, 0x0F	; 15
 10c:	97 e2       	ldi	r25, 0x27	; 39
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <CLCD_Init+0x4>
 112:	00 c0       	rjmp	.+0      	; 0x114 <CLCD_Init+0xa>
 114:	00 00       	nop
 116:	88 e3       	ldi	r24, 0x38	; 56
 118:	0e 94 63 00 	call	0xc6	; 0xc6 <CLCD_SendCommond>
 11c:	89 ef       	ldi	r24, 0xF9	; 249
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <CLCD_Init+0x16>
 124:	00 c0       	rjmp	.+0      	; 0x126 <CLCD_Init+0x1c>
 126:	00 00       	nop
 128:	8f e0       	ldi	r24, 0x0F	; 15
 12a:	0e 94 63 00 	call	0xc6	; 0xc6 <CLCD_SendCommond>
 12e:	89 ef       	ldi	r24, 0xF9	; 249
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <CLCD_Init+0x28>
 136:	00 c0       	rjmp	.+0      	; 0x138 <CLCD_Init+0x2e>
 138:	00 00       	nop
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	0e 94 63 00 	call	0xc6	; 0xc6 <CLCD_SendCommond>
 140:	83 ef       	ldi	r24, 0xF3	; 243
 142:	91 e0       	ldi	r25, 0x01	; 1
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <CLCD_Init+0x3a>
 148:	00 c0       	rjmp	.+0      	; 0x14a <CLCD_Init+0x40>
 14a:	00 00       	nop
 14c:	08 95       	ret

0000014e <CLCD_SendString>:
{
	CLCD_SendCommond(0x01);  // Clear Screan;
	_delay_ms(2);
}
void CLCD_SendString(u8 *PtrToString)
{
 14e:	0f 93       	push	r16
 150:	1f 93       	push	r17
 152:	cf 93       	push	r28
 154:	8c 01       	movw	r16, r24
	u8 i=0;	
 156:	c0 e0       	ldi	r28, 0x00	; 0
	while(PtrToString[i] !='\0')
 158:	03 c0       	rjmp	.+6      	; 0x160 <CLCD_SendString+0x12>
	{
		CLCD_SendData(PtrToString[i]);
 15a:	0e 94 41 00 	call	0x82	; 0x82 <CLCD_SendData>
		i++;
 15e:	cf 5f       	subi	r28, 0xFF	; 255
	_delay_ms(2);
}
void CLCD_SendString(u8 *PtrToString)
{
	u8 i=0;	
	while(PtrToString[i] !='\0')
 160:	f8 01       	movw	r30, r16
 162:	ec 0f       	add	r30, r28
 164:	f1 1d       	adc	r31, r1
 166:	80 81       	ld	r24, Z
 168:	81 11       	cpse	r24, r1
 16a:	f7 cf       	rjmp	.-18     	; 0x15a <CLCD_SendString+0xc>
	{
		CLCD_SendData(PtrToString[i]);
		i++;
	}
}
 16c:	cf 91       	pop	r28
 16e:	1f 91       	pop	r17
 170:	0f 91       	pop	r16
 172:	08 95       	ret

00000174 <CLCD_SetPosition>:


void CLCD_SetPosition(u8 xPos, u8 yPos)
{
	u8 Location;
	switch(xPos)
 174:	88 23       	and	r24, r24
 176:	29 f0       	breq	.+10     	; 0x182 <CLCD_SetPosition+0xe>
 178:	81 30       	cpi	r24, 0x01	; 1
 17a:	21 f4       	brne	.+8      	; 0x184 <CLCD_SetPosition+0x10>
	{
		case 0: Location= yPos;break;
		case 1: Location=yPos+0x40;break;
 17c:	90 e4       	ldi	r25, 0x40	; 64
 17e:	96 0f       	add	r25, r22
 180:	01 c0       	rjmp	.+2      	; 0x184 <CLCD_SetPosition+0x10>
void CLCD_SetPosition(u8 xPos, u8 yPos)
{
	u8 Location;
	switch(xPos)
	{
		case 0: Location= yPos;break;
 182:	96 2f       	mov	r25, r22
		case 1: Location=yPos+0x40;break;
	}
	CLCD_SendCommond(Location+128);
 184:	80 e8       	ldi	r24, 0x80	; 128
 186:	89 0f       	add	r24, r25
 188:	0e 94 63 00 	call	0xc6	; 0xc6 <CLCD_SendCommond>
 18c:	08 95       	ret

0000018e <DIO_SetPinValue>:
		break;
		case PORT_D:PinState=GET_BIT(PIND,PinNumber);
		break;
	}
	return PinState;	
}
 18e:	41 30       	cpi	r20, 0x01	; 1
 190:	b9 f5       	brne	.+110    	; 0x200 <DIO_SetPinValue+0x72>
 192:	82 30       	cpi	r24, 0x02	; 2
 194:	a1 f0       	breq	.+40     	; 0x1be <DIO_SetPinValue+0x30>
 196:	18 f4       	brcc	.+6      	; 0x19e <DIO_SetPinValue+0x10>
 198:	81 30       	cpi	r24, 0x01	; 1
 19a:	31 f0       	breq	.+12     	; 0x1a8 <DIO_SetPinValue+0x1a>
 19c:	08 95       	ret
 19e:	83 30       	cpi	r24, 0x03	; 3
 1a0:	c9 f0       	breq	.+50     	; 0x1d4 <DIO_SetPinValue+0x46>
 1a2:	84 30       	cpi	r24, 0x04	; 4
 1a4:	11 f1       	breq	.+68     	; 0x1ea <DIO_SetPinValue+0x5c>
 1a6:	08 95       	ret
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <DIO_SetPinValue+0x24>
 1ae:	88 0f       	add	r24, r24
 1b0:	99 1f       	adc	r25, r25
 1b2:	6a 95       	dec	r22
 1b4:	e2 f7       	brpl	.-8      	; 0x1ae <DIO_SetPinValue+0x20>
 1b6:	9b b3       	in	r25, 0x1b	; 27
 1b8:	89 2b       	or	r24, r25
 1ba:	8b bb       	out	0x1b, r24	; 27
 1bc:	08 95       	ret
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <DIO_SetPinValue+0x3a>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	6a 95       	dec	r22
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <DIO_SetPinValue+0x36>
 1cc:	98 b3       	in	r25, 0x18	; 24
 1ce:	89 2b       	or	r24, r25
 1d0:	88 bb       	out	0x18, r24	; 24
 1d2:	08 95       	ret
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_SetPinValue+0x50>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	6a 95       	dec	r22
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_SetPinValue+0x4c>
 1e2:	95 b3       	in	r25, 0x15	; 21
 1e4:	89 2b       	or	r24, r25
 1e6:	85 bb       	out	0x15, r24	; 21
 1e8:	08 95       	ret
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <DIO_SetPinValue+0x66>
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	6a 95       	dec	r22
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <DIO_SetPinValue+0x62>
 1f8:	92 b3       	in	r25, 0x12	; 18
 1fa:	89 2b       	or	r24, r25
 1fc:	82 bb       	out	0x12, r24	; 18
 1fe:	08 95       	ret
 200:	41 11       	cpse	r20, r1
 202:	3a c0       	rjmp	.+116    	; 0x278 <DIO_SetPinValue+0xea>
 204:	82 30       	cpi	r24, 0x02	; 2
 206:	a9 f0       	breq	.+42     	; 0x232 <DIO_SetPinValue+0xa4>
 208:	18 f4       	brcc	.+6      	; 0x210 <DIO_SetPinValue+0x82>
 20a:	81 30       	cpi	r24, 0x01	; 1
 20c:	31 f0       	breq	.+12     	; 0x21a <DIO_SetPinValue+0x8c>
 20e:	08 95       	ret
 210:	83 30       	cpi	r24, 0x03	; 3
 212:	d9 f0       	breq	.+54     	; 0x24a <DIO_SetPinValue+0xbc>
 214:	84 30       	cpi	r24, 0x04	; 4
 216:	29 f1       	breq	.+74     	; 0x262 <DIO_SetPinValue+0xd4>
 218:	08 95       	ret
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_SetPinValue+0x96>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	6a 95       	dec	r22
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_SetPinValue+0x92>
 228:	80 95       	com	r24
 22a:	9b b3       	in	r25, 0x1b	; 27
 22c:	89 23       	and	r24, r25
 22e:	8b bb       	out	0x1b, r24	; 27
 230:	08 95       	ret
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_SetPinValue+0xae>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	6a 95       	dec	r22
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_SetPinValue+0xaa>
 240:	80 95       	com	r24
 242:	98 b3       	in	r25, 0x18	; 24
 244:	89 23       	and	r24, r25
 246:	88 bb       	out	0x18, r24	; 24
 248:	08 95       	ret
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_SetPinValue+0xc6>
 250:	88 0f       	add	r24, r24
 252:	99 1f       	adc	r25, r25
 254:	6a 95       	dec	r22
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_SetPinValue+0xc2>
 258:	80 95       	com	r24
 25a:	95 b3       	in	r25, 0x15	; 21
 25c:	89 23       	and	r24, r25
 25e:	85 bb       	out	0x15, r24	; 21
 260:	08 95       	ret
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 c0       	rjmp	.+4      	; 0x26c <DIO_SetPinValue+0xde>
 268:	88 0f       	add	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	6a 95       	dec	r22
 26e:	e2 f7       	brpl	.-8      	; 0x268 <DIO_SetPinValue+0xda>
 270:	80 95       	com	r24
 272:	92 b3       	in	r25, 0x12	; 18
 274:	89 23       	and	r24, r25
 276:	82 bb       	out	0x12, r24	; 18
 278:	08 95       	ret

0000027a <DIO_SetPortDirection>:

/* Function definitions that deals with pins */

void DIO_SetPortDirection(u8 Portname,u8 PortDirection)
{
	switch(Portname)
 27a:	82 30       	cpi	r24, 0x02	; 2
 27c:	59 f0       	breq	.+22     	; 0x294 <DIO_SetPortDirection+0x1a>
 27e:	18 f4       	brcc	.+6      	; 0x286 <DIO_SetPortDirection+0xc>
 280:	81 30       	cpi	r24, 0x01	; 1
 282:	31 f0       	breq	.+12     	; 0x290 <DIO_SetPortDirection+0x16>
 284:	08 95       	ret
 286:	83 30       	cpi	r24, 0x03	; 3
 288:	39 f0       	breq	.+14     	; 0x298 <DIO_SetPortDirection+0x1e>
 28a:	84 30       	cpi	r24, 0x04	; 4
 28c:	39 f0       	breq	.+14     	; 0x29c <DIO_SetPortDirection+0x22>
 28e:	08 95       	ret
	{
		case PORT_A: DDRA=PortDirection;
 290:	6a bb       	out	0x1a, r22	; 26
		break;
 292:	08 95       	ret
		case PORT_B: DDRB=PortDirection;
 294:	67 bb       	out	0x17, r22	; 23
		break;
 296:	08 95       	ret
		case PORT_C: DDRC=PortDirection;
 298:	64 bb       	out	0x14, r22	; 20
		break;
 29a:	08 95       	ret
		case PORT_D: DDRD=PortDirection;
 29c:	61 bb       	out	0x11, r22	; 17
 29e:	08 95       	ret

000002a0 <DIO_SetPortValue>:
		break;
	}
}
void DIO_SetPortValue(u8 Portname,u8 PortValue)
{
	switch(Portname)
 2a0:	82 30       	cpi	r24, 0x02	; 2
 2a2:	59 f0       	breq	.+22     	; 0x2ba <DIO_SetPortValue+0x1a>
 2a4:	18 f4       	brcc	.+6      	; 0x2ac <DIO_SetPortValue+0xc>
 2a6:	81 30       	cpi	r24, 0x01	; 1
 2a8:	31 f0       	breq	.+12     	; 0x2b6 <DIO_SetPortValue+0x16>
 2aa:	08 95       	ret
 2ac:	83 30       	cpi	r24, 0x03	; 3
 2ae:	39 f0       	breq	.+14     	; 0x2be <DIO_SetPortValue+0x1e>
 2b0:	84 30       	cpi	r24, 0x04	; 4
 2b2:	39 f0       	breq	.+14     	; 0x2c2 <DIO_SetPortValue+0x22>
 2b4:	08 95       	ret
	{
		case PORT_A: PORTA=PortValue;
 2b6:	6b bb       	out	0x1b, r22	; 27
		break;
 2b8:	08 95       	ret
		case PORT_B: PORTB=PortValue;
 2ba:	68 bb       	out	0x18, r22	; 24
		break;
 2bc:	08 95       	ret
		case PORT_C: PORTC=PortValue;
 2be:	65 bb       	out	0x15, r22	; 21
		break;
 2c0:	08 95       	ret
		case PORT_D: PORTD=PortValue;
 2c2:	62 bb       	out	0x12, r22	; 18
 2c4:	08 95       	ret

000002c6 <main>:
#include "DIO_Interface.h"
#include "CLCD_Interface.h"

void main(void)
{
    DIO_SetPortDirection(PORT_A,PORT_OUTPUT);
 2c6:	61 e0       	ldi	r22, 0x01	; 1
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	0e 94 3d 01 	call	0x27a	; 0x27a <DIO_SetPortDirection>
	DIO_SetPortDirection(PORT_C,0x07);
 2ce:	67 e0       	ldi	r22, 0x07	; 7
 2d0:	83 e0       	ldi	r24, 0x03	; 3
 2d2:	0e 94 3d 01 	call	0x27a	; 0x27a <DIO_SetPortDirection>
	CLCD_Init();
 2d6:	0e 94 85 00 	call	0x10a	; 0x10a <CLCD_Init>
	CLCD_SendString("Eman Orabi *_*");
 2da:	80 e6       	ldi	r24, 0x60	; 96
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	0e 94 a7 00 	call	0x14e	; 0x14e <CLCD_SendString>
	CLCD_SetPosition(1,2);
 2e2:	62 e0       	ldi	r22, 0x02	; 2
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	0e 94 ba 00 	call	0x174	; 0x174 <CLCD_SetPosition>
	CLCD_SendString("YOur Fav Eng");
 2ea:	8f e6       	ldi	r24, 0x6F	; 111
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	0e 94 a7 00 	call	0x14e	; 0x14e <CLCD_SendString>
 2f2:	ff cf       	rjmp	.-2      	; 0x2f2 <main+0x2c>

000002f4 <_exit>:
 2f4:	f8 94       	cli

000002f6 <__stop_program>:
 2f6:	ff cf       	rjmp	.-2      	; 0x2f6 <__stop_program>
